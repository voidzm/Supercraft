package com.voidzm.supercraft.gui;

import java.awt.Dimension;
import java.util.ArrayList;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.gui.GuiButton;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.gui.GuiSmallButton;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.util.StringTranslate;

import com.google.common.base.Strings;

import cpw.mods.fml.client.FMLClientHandler;
import cpw.mods.fml.client.GuiSlotModList;
import cpw.mods.fml.client.TextureFXManager;
import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.ModContainer;

public class GuiSupercraftModList extends GuiSupercraftScreen {

	private GuiSupercraftScreen parent;
	private GuiSupercraftModSlot modSlot;
	private int selected = -1;
	private ModContainer selectedMod;
	private ArrayList<ModContainer> mods;
	
	private GuiButtonTransparent buttonSelect;

	public GuiSupercraftModList(GuiSupercraftScreen screen) {
		this.parent = screen;
		this.imageTick = screen.imageTick;
		this.mods = new ArrayList<ModContainer>();
		FMLClientHandler.instance().addSpecialModEntries(mods);
		for(ModContainer mod : Loader.instance().getModList()) {
			if(mod.getMetadata() != null && mod.getMetadata().parentMod == null && !Strings.isNullOrEmpty(mod.getMetadata().parent)) {
				String parentMod = mod.getMetadata().parent;
				ModContainer parentContainer = Loader.instance().getIndexedModList().get(parentMod);
				if(parentContainer != null) {
					mod.getMetadata().parentMod = parentContainer;
					parentContainer.getMetadata().childMods.add(mod);
					continue;
				}
			}
			else if(mod.getMetadata() != null && mod.getMetadata().parentMod!=null) {
				continue;
			}
			mods.add(mod);
		}
	}

	@Override
	public void initGui() {
		StringTranslate t = StringTranslate.getInstance();
		this.buttons.clear();
		this.buttons.add(new GuiButtonTransparent(this, this.width / 2 - 155, this.height - 33, 150, 16, 0, t.translateKey("gui.done")));
		this.buttons.add(buttonSelect = new GuiButtonTransparent(this, this.width / 2 + 5, this.height - 33, 150, 16, 1, "Select Mod"));
		this.buttonSelect.enabled = false;
		this.modSlot = new GuiSupercraftModSlot(this, mods);
		this.modSlot.boxshift = 0;
		this.modSlot.registerScrollButtons(this.buttons, 2, 3);
	}

	@Override
	public void buttonEvent(int id) {
		switch(id) {
			case 0:
				this.parent.imageTick = this.imageTick;
				this.mc.displayGuiScreen(this.parent);
				break;
			case 1:
				if(this.selectedMod != null) {
					this.mc.displayGuiScreen(new GuiModDetail(this, this.selectedMod));
				}
				break;
		}
	}

	public int drawLine(String line, int offset, int shifty) {
		int r = this.fontRenderer.drawString(line, offset, shifty, 0xd7edea);
		return shifty + 10;
	}
	
	@Override
	public void drawScreenForeground(int mx, int my, float tick) {
		this.drawRect(0, 0, width, 40, 0xBB000000);
		this.drawRect(0, 40, width, 41, 0xDD000000);
		this.drawRect(0, 41, width, height-51, 0x88000000);
		this.drawRect(0, height-51, width, height-50, 0xDD000000);
		this.drawRect(0, height-50, width, height, 0xBB000000);
		super.drawScreenForeground(mx, my, tick);
		this.modSlot.drawScreen(mx, my, tick);
		this.drawCenteredString(this.fontRenderer, "Mods", this.width / 2, 16, 0xFFFFFF);
		/*int offset = this.listWidth  + 20;
		if(selectedMod != null) {
			GL11.glEnable(GL11.GL_BLEND);
			if(!selectedMod.getMetadata().autogenerated) {
				int shifty = 35;
				String logoFile = selectedMod.getMetadata().logoFile;
				if(!logoFile.isEmpty()) {
					GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
					this.mc.renderEngine.bindTexture(logoFile);
					Dimension dim = TextureFXManager.instance().getTextureDimensions(logoFile);
					double scaleX = dim.width / 200.0;
					double scaleY = dim.height / 65.0;
					double scale = 1.0;
					if(scaleX > 1 || scaleY > 1) {
						scale = 1.0 / Math.max(scaleX, scaleY);
					}
					dim.width *= scale;
					dim.height *= scale;
					int top = 32;
					Tessellator tess = Tessellator.instance;
					tess.startDrawingQuads();
					tess.addVertexWithUV(offset, top + dim.height, zLevel, 0, 1);
					tess.addVertexWithUV(offset + dim.width, top + dim.height, zLevel, 1, 1);
					tess.addVertexWithUV(offset + dim.width, top, zLevel, 1, 0);
					tess.addVertexWithUV(offset, top, zLevel, 0, 0);
					tess.draw();
					shifty += 65;
				}
				this.fontRenderer.drawStringWithShadow(selectedMod.getMetadata().name, offset, shifty, 0xFFFFFF);
				shifty += 12;
				shifty = drawLine(String.format("Version: %s (%s)", selectedMod.getDisplayVersion(), selectedMod.getVersion()), offset, shifty);
				shifty = drawLine(String.format("Mod ID: '%s' Mod State: %s", selectedMod.getModId(), Loader.instance().getModState(selectedMod)), offset, shifty);
				if(!selectedMod.getMetadata().credits.isEmpty()) {
					shifty = drawLine(String.format("Credits: %s", selectedMod.getMetadata().credits), offset, shifty);
				}
				shifty = drawLine(String.format("Authors: %s", selectedMod.getMetadata().getAuthorList()), offset, shifty);
				shifty = drawLine(String.format("URL: %s", selectedMod.getMetadata().url), offset, shifty);
				shifty = drawLine(selectedMod.getMetadata().childMods.isEmpty() ? "No child mods for this mod" : String.format("Child mods: %s", selectedMod.getMetadata().getChildModList()), offset, shifty);
				int rightSide = this.width - offset - 20;
				if(rightSide > 20) {
					this.getFontRenderer().drawSplitString(selectedMod.getMetadata().description, offset, shifty + 10, rightSide, 0xDDDDDD);
				}
			}
			else {
				offset = (this.listWidth + this.width) / 2;
				this.drawCenteredString(this.fontRenderer, selectedMod.getName(), offset, 35, 0xFFFFFF);
				this.drawCenteredString(this.fontRenderer, String.format("Version: %s",selectedMod.getVersion()), offset, 45, 0xFFFFFF);
				this.drawCenteredString(this.fontRenderer, String.format("Mod State: %s",Loader.instance().getModState(selectedMod)), offset, 55, 0xFFFFFF);
				this.drawCenteredString(this.fontRenderer, "No mod information found", offset, 65, 0xDDDDDD);
				this.drawCenteredString(this.fontRenderer, "Ask your mod author to provide a mod mcmod.info file", offset, 75, 0xDDDDDD);
			}
			GL11.glDisable(GL11.GL_BLEND);
		}*/
	}

	public void selectModIndex(int var1) {
		this.selected = var1;
		if (var1 >= 0 && var1 <= mods.size()) {
			this.selectedMod = mods.get(selected);
			this.buttonSelect.enabled = true;
		}
		else {
			this.selectedMod = null;
			this.buttonSelect.enabled = false;
		}
	}

	public boolean modIndexSelected(int var1) {
		return var1 == selected;
	}
	
	public static GuiButtonTransparent getButtonSelect(GuiSupercraftModList list) {
		return list.buttonSelect;
	}

}
